-- Electronic Voting System Database (Oracle Version)
-- Dynamic system - users register themselves, no pre-populated data

-- 1. Users table (stores voter and admin info)
CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) UNIQUE NOT NULL,
    password VARCHAR2(255) NOT NULL,
    role VARCHAR2(20) DEFAULT 'voter' CHECK (role IN ('admin', 'voter')),
    full_name VARCHAR2(100) NOT NULL,
    has_voted NUMBER(1) DEFAULT 0 CHECK (has_voted IN (0,1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 2. Elections table (manages election instances)
CREATE TABLE elections (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR2(100) NOT NULL,
    description CLOB,
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP NOT NULL,
    status VARCHAR2(20) DEFAULT 'inactive' CHECK (status IN ('active', 'inactive', 'completed')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 3. Candidates table (stores candidate details)
CREATE TABLE candidates (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    election_id NUMBER NOT NULL,
    name VARCHAR2(100) NOT NULL,
    party VARCHAR2(50) NOT NULL,
    photo VARCHAR2(255),
    bio CLOB,
    vote_count NUMBER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_candidates_election FOREIGN KEY (election_id) REFERENCES elections(id) ON DELETE CASCADE
);

-- 4. Votes table (records voting choices with enhanced security)
CREATE TABLE votes (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    candidate_id NUMBER NOT NULL,
    election_id NUMBER NOT NULL,
    vote_hash VARCHAR2(64),
    vote_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_votes_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_votes_candidate FOREIGN KEY (candidate_id) REFERENCES candidates(id) ON DELETE CASCADE,
    CONSTRAINT fk_votes_election FOREIGN KEY (election_id) REFERENCES elections(id) ON DELETE CASCADE,
    CONSTRAINT unique_user_election UNIQUE (user_id, election_id)
);

-- Create additional indexes for better performance
CREATE INDEX idx_elections_status ON elections(status);
CREATE INDEX idx_elections_dates ON elections(start_date, end_date);
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_candidates_election ON candidates(election_id);
CREATE INDEX idx_election_votes ON votes(election_id);
CREATE INDEX idx_candidate_votes ON votes(candidate_id);
CREATE INDEX idx_vote_timestamp ON votes(vote_timestamp);

-- Display setup completion message
SELECT 'Database created successfully!' as message FROM dual;
SELECT 'System ready for user registration!' as status FROM dual;
SELECT 'No pre-populated data - users must register accounts' as note FROM dual;

COMMIT;
